option(USE_VCPKG "Use VCPKG" ON)
option(VCPKG_VERBOSE "Run VCPKG verbose" ON)

if(USE_VCPKG)
    if(WIN32)
        if(NOT DEFINED VCPKG_TARGET_TRIPLET)
            set(VCPKG_TARGET_TRIPLET x64-windows-static CACHE STRING "Used VCPKG target triplet")
        endif()
        set(VCPKG_HINTS "${CMAKE_SOURCE_DIR}/../extern/vcpkg/" "${CMAKE_SOURCE_DIR}/../../extern/vcpkg/" "${CMAKE_SOURCE_DIR}/../../../extern/vcpkg/")
    elseif(UNIX AND NOT (CYGWIN OR APPLE))
        set(VCPKG_HINTS "${CMAKE_SOURCE_DIR}/../extern/vcpkg/" "${CMAKE_SOURCE_DIR}/../../extern/vcpkg/" "${CMAKE_SOURCE_DIR}/../../../extern/vcpkg/")
        if(NOT DEFINED VCPKG_TARGET_TRIPLET)
            set(VCPKG_TARGET_TRIPLET x64-linux CACHE STRING "Used VCPKG target triplet")
        endif()
    endif()

    find_path(VCPKG_DIR NAMES .vcpkg-root HINTS ${VCPKG_HINTS} PATHS "./vcpkg" "./../vcpkg" "./vcpkg" "./../../vcpkg")
    if(EXISTS "${VCPKG_DIR}")
        message(STATUS "VCPKG_DIR is defined as: ${VCPKG_DIR}")
        set(CMAKE_TOOLCHAIN_FILE "${VCPKG_DIR}/scripts/buildsystems/vcpkg.cmake")
        message(STATUS "CMAKE_TOOLCHAIN_FILE is defined as: " ${CMAKE_TOOLCHAIN_FILE})
        message(STATUS "CMAKE_MODULE_PATH is defined as: " ${CMAKE_MODULE_PATH})
        message(STATUS "CMAKE_LIBRARY_PATH is defined as: " ${CMAKE_LIBRARY_PATH})
    else()
        message(FATAL_ERROR "Could not find VCPKG! ${VCPKG_DIR} with Hints: ${VCPKG_HINTS}")
    endif()
endif()

if(USE_VCPKG AND NOT DEFINED VCPKG_CHAINLOAD_TOOLCHAIN_FILE)
    if(CMAKE_GENERATOR STREQUAL "Ninja" AND NOT DEFINED VCPKG_CHAINLOAD_TOOLCHAIN_FILE)
        if(WIN32)
            set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchains/toolchain_ninja_clang-cl.cmake" CACHE PATH "Used toolchain file beside VCPKG toolchain")
        elseif(UNIX AND NOT (CYGWIN OR APPLE))
            set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchains/toolchain_ninja_clang++.cmake" CACHE PATH "Used toolchain file beside VCPKG toolchain")
        endif()
    elseif(CMAKE_GENERATOR MATCHES "Visual Studio" AND NOT DEFINED VCPKG_CHAINLOAD_TOOLCHAIN_FILE)
        message(STATUS "Using VS Generator with platformtoolset: ${CMAKE_GENERATOR_TOOLSET}")
        if(CMAKE_GENERATOR_TOOLSET STREQUAL "llvm")
            set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchains/toolchain_vs_llvm.cmake" CACHE PATH "Used toolchain file beside VCPKG toolchain")
        elseif(CMAKE_GENERATOR_TOOLSET MATCHES "Intel")
            set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchains/toolchain_vs_intel.cmake" CACHE PATH "Used toolchain file beside VCPKG toolchain")
        else()
            set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE "${CMAKE_CURRENT_LIST_DIR}/toolchains/toolchain_msvc_general.cmake" CACHE PATH "Used toolchain file beside VCPKG toolchain")
        endif()
    endif()
endif()
